import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns  # 更高级的画图包 
sns.set(color_codes= True)  # 选定包里自带的颜色搭配，不使用则选择False
data0 = pd.read_excel("长春市城区终数据.xlsx") 


# ROC 曲线
import warnings 
warnings.filterwarnings("ignore") # 忽略警告消息
import pandas as pd
import numpy as np
from sklearn import svm # 支持向量机
import matplotlib.pyplot as plt  # 画图
from sklearn.metrics import roc_curve,precision_recall_curve ,roc_auc_score,auc,average_precision_score # ROC相关包
import os  # 处理文件和目录
import matplotlib
# Jupyter notebook 中的魔法命令 ，在下面的代码模块里面都可以不用写 plt.show() 交互式显示图片
%matplotlib inline  
%config InlineBackend.figure_format = 'svg'  # 提高图片分辨率

plt.rc('font',family='Times New Roman')  # 将全局字体改为Times New Roman
my_colors = ["#1EB2A6","#ffc4a3","#e2979c","#F67575"]

X= data0['bmi']
y= data0["糖尿病患者"]
from sklearn import model_selection
from sklearn import svm
X_train, X_test, y_train, y_test = model_selection.train_test_split(X, y, test_size=.3,random_state=0)
svm = svm.SVC(kernel='linear', probability=True,random_state=0)
y_score = svm.fit(X_train, y_train).decision_function(X_test)

fpr,tpr,threshold = roc_curve(y_test, y_score,pos_label=1) ###计算真正率和假正率
roc_auc = auc(fpr,tpr) ###计算auc的值
 
plt.figure()
lw = 2
plt.figure(figsize=(10,10))
plt.plot(fpr, tpr, color='darkorange',
         lw=lw, label='ROC curve (area = %0.2f)' % roc_auc) ###假正率为横坐标，真正率为纵坐标做曲线
plt.plot([0, 1], [0, 1], color='navy', lw=lw, linestyle='--')
plt.xlim([0.0, 1.0])
plt.ylim([0.0, 1.05])
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('Receiver operating characteristic example')
plt.legend(loc="lower right")
plt.show()
